<dotnetnuke type="Package" version="5.0">
  <packages>
	<package name="RedisCachingProvider" type="Provider" version="02.00.00">
	  <friendlyName>DNN Redis Caching Provider</friendlyName>
	  <description>Allows to use a Redis cache server or cluster within DNN, using a hybrid approach mixing in-memory cache plus the shared
      Redis cache</description>
	  <iconFile>~/Providers/CachingProviders/RedisCachingProvider/images/Redis.png</iconFile>      
	  <owner>
		<name>David Rodriguez</name>
		<organization>David Rodriguez</organization>
		<url>http://davidjrh.intelequia.com</url>
		<email>davidjrh@hotmail.com</email>
	  </owner>
	  <license src="License.txt"></license>
	  <releaseNotes src="ReleaseNotes.txt"></releaseNotes>
    <azureCompatible>true</azureCompatible>
	  <dependencies>
		  <dependency type="CoreVersion">08.00.00</dependency>
	  </dependencies>
	  
	  <components>
		<component type="ResourceFile">
		  <resourceFiles>
			<basePath>Providers/CachingProviders/RedisCachingProvider</basePath>
			<resourceFile>
			  <name>Resources.zip</name>
			</resourceFile>
		  </resourceFiles>
		</component>        

		<!-- web.config -->
		<component type="Config">
		  <config>
			<configFile>web.config</configFile>
			<install>
			  <configuration>
				<nodes>
				  <node path="/configuration/dotnetnuke/caching" action="updateattribute" name="defaultProvider" value="RedisCachingProvider" />
				  <node path="/configuration/dotnetnuke/caching/providers" action="update" key="name" collision="overwrite">                        
					  <add name="RedisCachingProvider"
								  type="DotNetNuke.Providers.RedisCachingProvider.RedisCachingProvider, DotNetNuke.Providers.RedisCachingProvider"
								  providerPath="~\Providers\CachingProviders\RedisCachingProvider\" useCompression="false" silentMode="true" />
				  </node>
          <node path="/configuration/dotnetnuke/outputCaching" action="updateattribute" name="defaultProvider" value="RedisOutputCachingProvider" />
          <node path="/configuration/dotnetnuke/outputCaching/providers" action="update" key="name" collision="overwrite">
            <add name="RedisOutputCachingProvider"
								  type="DotNetNuke.Providers.RedisCachingProvider.RedisOutputCachingProvider, DotNetNuke.Providers.RedisCachingProvider"
								  providerPath="~\Providers\CachingProviders\RedisCachingProvider\" useCompression="false" silentMode="true" />
          </node>

          <node path="/configuration/connectionStrings" action="update" key="name" collision="overwrite">
            <add name="RedisCachingProvider" connectionString="" providerName="DotNetNuke.Providers.RedisCachingProvider" />
          </node>
				</nodes>
			  </configuration>
			</install>
			<uninstall>
			  <configuration>
				<nodes>
				  <node path="/configuration/dotnetnuke/caching" action="updateattribute" name="defaultProvider" value="FileBasedCachingProvider" />
				  <node path="/configuration/dotnetnuke/caching/providers/add[@name='RedisCachingProvider']" action="remove" />
          <node path="/configuration/dotnetnuke/outputCaching" action="updateattribute" name="defaultProvider" value="FileOutputCachingProvider" />
          <node path="/configuration/dotnetnuke/outputCaching/providers/add[@name='RedisOutputCachingProvider']" action="remove" />
          <node path="/configuration/connectionStrings/add[@name='RedisCachingProvider']" action="remove" />
				</nodes>
			  </configuration>
			</uninstall>
		  </config>
		</component>
		<component type="Assembly">
		  <assemblies>
			  <basePath>bin\Providers</basePath>
			  <assembly>
          <path>bin\Providers</path>
			    <name>DotNetNuke.Providers.RedisCachingProvider.dll</name>
			  </assembly>
        <assembly>
          <path>bin\Providers</path>
          <name>StackExchange.Redis.dll</name>
        </assembly>
      </assemblies>
		</component>
	  </components>
	</package>
  </packages>
</dotnetnuke>